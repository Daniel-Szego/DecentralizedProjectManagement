/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Sample business network definition for decentralized project management.
 */
namespace org.project.basic

/**
 * ASSETS
 */

enum Status {
  	o NOTSTARTED
	o STARTED
    o FINISHED
}

asset Project identified by projectId {
  o String projectId
  o String projectName
  o DateTime startDate
  o DateTime dueDate
  o Status status
  -->Step[] steps
}

asset Step identified by stepId {
  o String stepId
  o String stepName
  o DateTime startDate
  o DateTime dueDate
  o Status status
  o Integer readyness
  -->Step previousStep
}

/**
 * PARTICIPANTS
 */

abstract participant ProjectPartcipants identified by participantId {
  o String participantId
  o String firstName
  o String lastName
  o String organisationName
}

participant Worker extends ProjectPartcipants {
}

participant Auditor extends ProjectPartcipants {
}

/**
 * TRANSACTIONS
 */

transaction CreateTestData {
}

transaction ClearTestData {
}

transaction CreateProject {
  o String projectName
  o String startDateString
  o String dueDateString
}

transaction AddStepToProject {
  --> Project project
  o String stepName
  o String startDateString
  o String dueDateString
}

transaction AddWorkerToStep {
  --> Worker worker
  --> Step step
}

transaction AddAuditorToStep {
  --> Auditor auditor
  --> Step step
}


/**
 * EVENTS
 */


event ProjectCreated {
  --> Project project
}

event StepCreated {
  --> Project project
  --> Step step
}

event WorkerAdded {
  --> Worker worker
  --> Step step
}

event AuditorAdded {
  --> Auditor auditor
  --> Step step
}